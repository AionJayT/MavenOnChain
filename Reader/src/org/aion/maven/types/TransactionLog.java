package org.aion.maven.types;

import java.util.Collections;
import java.util.List;


/**
 * A single log event entry generated by a transaction.
 */
public final class TransactionLog {
    public final Address sourceContractAddress;
    public final byte[] data;
    public final List<Topic> topics;
    public final long blockNumber;
    public final BlockHash blockHash;
    public final int transactionIndex;
    public final int logIndex;

    public TransactionLog(Address sourceContractAddress, byte[] data, List<Topic> topics, long blockNumber, BlockHash blockHash, int transactionIndex, int logIndex) {
        this.sourceContractAddress = sourceContractAddress;
        this.data = data.clone();
        this.topics = Collections.unmodifiableList(topics);
        this.blockNumber = blockNumber;
        this.blockHash = blockHash;
        this.transactionIndex = transactionIndex;
        this.logIndex = logIndex;
    }

    @Override
    public int hashCode() {
        // Note that hashcode and equality of a log are just defined by the hash of the block they are in and the indices pointing to where it is in that block.
        return this.blockHash.hashCode()
                ^ this.transactionIndex
                ^ this.logIndex
        ;
    }

    @Override
    public boolean equals(Object obj) {
        // Note that hashcode and equality of a log are just defined by the hash of the block they are in and the indices pointing to where it is in that block.
        boolean isEqual = (obj == this);
        if (!isEqual && (null != obj) && (obj.getClass() == getClass())) {
            TransactionLog other = (TransactionLog) obj;
            isEqual = this.blockHash.equals(other.blockHash)
                    && (this.transactionIndex == other.transactionIndex)
                    && (this.logIndex == other.logIndex)
            ;
        }
        return isEqual;
    }
}
